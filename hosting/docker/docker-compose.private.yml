version: '3.8'

services:
  postgres:
    image: pgvector/pgvector:pg17
    container_name: colanode_postgres
    restart: always
    environment:
      POSTGRES_USER: colanode_user
      POSTGRES_PASSWORD: postgrespass123
      POSTGRES_DB: colanode_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - colanode_network

  valkey:
    image: valkey/valkey:8.1
    container_name: colanode_valkey
    restart: always
    command: ['valkey-server', '--requirepass', 'your_valkey_password']
    volumes:
      - valkey_data:/data
    ports:
      - '6379:6379'
    networks:
      - colanode_network

  minio:
    image: minio/minio:RELEASE.2025-04-08T15-41-24Z
    container_name: colanode_minio
    restart: always
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: your_minio_password
      MINIO_BROWSER: 'on'
      MINIO_DOMAIN: minio
    volumes:
      - minio_data:/data
    ports:
      - '9000:9000'
      - '9001:9001'
    entrypoint: sh
    command: -c 'mkdir -p /data/colanode && minio server /data --address ":9000" --console-address ":9001"'
    networks:
      - colanode_network

  server:
    image: ghcr.io/colanode/server:latest
    container_name: colanode_server
    restart: always
    depends_on:
      - postgres
      - valkey
      - minio
    environment:
      NODE_ENV: production
      SERVER_NAME: 'Colanode Prod'
      SERVER_MODE: 'standalone'
      SERVER_PATH_PREFIX: '/api'
      SERVER_CORS_ORIGIN: 'http://44.198.171.48' #,http://localhost:3000'  #put your  public ip for your public facing ec2
      SERVER_HOST: '0.0.0.0'  # ðŸ‘ˆ Add this line wenever u are deploying to ec2
      ACCOUNT_VERIFICATION_TYPE: 'automatic'
      ACCOUNT_OTP_TIMEOUT: '600'
      USER_STORAGE_LIMIT: '10737418240'
      USER_MAX_FILE_SIZE: '104857600'
      POSTGRES_URL: 'postgres://colanode_user:postgrespass123@postgres:5432/colanode_db'
      REDIS_URL: 'redis://:your_valkey_password@valkey:6379/0'
      STORAGE_S3_ENDPOINT: 'http://minio:9000'
      STORAGE_S3_ACCESS_KEY: 'minioadmin'
      STORAGE_S3_SECRET_KEY: 'your_minio_password'
      STORAGE_S3_BUCKET: 'colanode'
      STORAGE_S3_REGION: 'us-east-1'
      STORAGE_S3_FORCE_PATH_STYLE: 'true'
      SMTP_ENABLED: 'false'
    ports:
      - '3000:3000'
    networks:
      - colanode_network

volumes:
  postgres_data:
  valkey_data:
  minio_data:

networks:
  colanode_network:
    driver: bridge
